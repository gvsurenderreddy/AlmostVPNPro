<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<!--
 Generated: Thu Nov 09 17:43:25 EST 2000 jfouffa.w3.org
 -->
<html lang='en' xmlns="http://www.w3.org/1999/xhtml">
<head>
<title>Glossary</title>
<link rel='stylesheet' type='text/css' href='./spec.css' />
<link rel='stylesheet' type='text/css' href='W3C-REC.css' />
<link rel='next' href='references.html' />
<link rel='contents' href='Overview.html#contents' />
<link rel='index' href='def-index.html' />
<link rel='previous' href='acknowledgements.html' />
</head>
<body>
<div class='navbar' align='center'><a accesskey='p'
href='acknowledgements.html'>previous</a> &nbsp; <a accesskey='n'
href='references.html'>next</a> &nbsp; <a accesskey='c'
href='Overview.html#contents'>contents</a> &nbsp; <a accesskey='i'
href='def-index.html'>index</a> 

<hr title='Navigation area separator' />
</div>

<div class='noprint' style='text-align: right'>
<p style='font-family: monospace;font-size:small'>13 November,
2000</p>
</div>

<div class='div1'><a id="glossary" name='glossary'></a> 

<h1 id='role-glossary' class='glossary'>Glossary</h1>

<dl>
<dt><i>Editors</i></dt>

<dd>Arnaud Le Hors, IBM</dd>

<dd>Lauren Wood, SoftQuad Software Inc.</dd>

<dd>Robert S. Sutor, IBM (for DOM Level 1)</dd>
</dl>

<p>Several of the following term definitions have been borrowed or
modified from similar definitions in other W3C or standards
documents. See the links within the definitions for more
information.</p>

<dl>
<dt><b><a id="dt-16-bit-unit" name='dt-16-bit-unit'>16-bit
unit</a></b></dt>

<dd>The base unit of a <a
href='core.html#DOMString'><code>DOMString</code></a>. This
indicates that indexing on a <a class='noxref'
href='core.html#DOMString'><code>DOMString</code></a> occurs in
units of 16 bits. This must not be misunderstood to mean that a <a
class='noxref'
href='core.html#DOMString'><code>DOMString</code></a> can store
arbitrary 16-bit units. A <a class='noxref'
href='core.html#DOMString'><code>DOMString</code></a> is a
character string encoded in UTF-16; this means that the
restrictions of UTF-16 as well as the other relevant restrictions
on character strings must be maintained. A single character, for
example in the form of a numeric character reference, may
correspond to one or two 16-bit units.<br />
For more information, see [<a class='noxref'
href='references.html#Unicode'>Unicode</a>] and [<a class='noxref'
href='references.html#ISO10646'>ISO/IEC 10646</a>].</dd>

<dt><b><a id="dt-ancestor" name='dt-ancestor'>ancestor</a></b></dt>

<dd>An <i>ancestor</i> node of any node A is any node above A in a
tree model of a document, where "above" means "toward the
root."</dd>

<dt><b><a id="dt-API" name='dt-API'>API</a></b></dt>

<dd>An <i>API</i> is an application programming interface, a set of
functions or <i>methods</i> used to access some functionality.</dd>

<dt><b><a id="dt-child" name='dt-child'>child</a></b></dt>

<dd>A <i>child</i> is an immediate <i>descendant</i> node of a
node.</dd>

<dt><b><a id="dt-application" name='dt-application'>client
application</a></b></dt>

<dd>A [client] application is any software that uses the Document
Object Model programming interfaces provided by the hosting
implementation to accomplish useful work. Some examples of client
applications are scripts within an HTML or XML document.</dd>

<dt><b><a id="dt-COM" name='dt-COM'>COM</a></b></dt>

<dd><i>COM</i> is Microsoft's Component Object Model [<a
class='noxref' href='references.html#COM'>COM</a>], a technology
for building applications from binary software components.</dd>

<dt><b><a id="dt-convenience"
name='dt-convenience'>convenience</a></b></dt>

<dd>A <i>convenience method</i> is an operation on an object that
could be accomplished by a program consisting of more basic
operations on the object. Convenience <i>methods</i> are usually
provided to make the API easier and simpler to use or to allow
specific programs to create more optimized implementations for
common operations. A similar definition holds for a <i>convenience
property</i>.</dd>

<dt><b><a id="dt-datamodel" name='dt-datamodel'>data
model</a></b></dt>

<dd>A <i>data model</i> is a collection of descriptions of data
structures and their contained fields, together with the operations
or functions that manipulate them.</dd>

<dt><b><a id="dt-descendant"
name='dt-descendant'>descendant</a></b></dt>

<dd>A <i>descendant</i> node of any node A is any node below A in a
tree model of a document, where "above" means "toward the
root."</dd>

<dt><b><a id="dt-ECMAScript"
name='dt-ECMAScript'>ECMAScript</a></b></dt>

<dd>The programming language defined by the ECMA-262 standard [<a
class='noxref' href='references.html#ECMAScript'>ECMAScript</a>].
As stated in the standard, the originating technology for
ECMAScript was JavaScript [<a class='noxref'
href='references.html#JavaScript'>JavaScript</a>]. Note that in the
ECMAScript Language binding, the word "property" is used in the
same sense as the IDL term "attribute."</dd>

<dt><b><a id="dt-element" name='dt-element'>element</a></b></dt>

<dd>Each document contains one or more elements, the boundaries of
which are either delimited by start-tags and end-tags, or, for
empty elements by an empty-element tag. Each element has a type,
identified by name, and may have a set of attributes. Each
attribute has a name and a value. See <a
href='http://www.w3.org/TR/1998/REC-xml-19980210#sec-logical-struct'>
<em>Logical Structures</em></a> in XML [<a class='noxref'
href='references.html#XML'>XML</a>].</dd>

<dt><b><a id="dt-infoitem" name='dt-infoitem'>information
item</a></b></dt>

<dd>An information item is an abstract representation of some
component of an XML document. See the [<a class='noxref'
href='references.html#InfoSet'>Infoset</a>] for details.</dd>

<dt><b><a id="dt-implementation" name='dt-implementation'>hosting
implementation</a></b></dt>

<dd>A [hosting] implementation is a software module that provides
an implementation of the DOM interfaces so that a client
application can use them. Some examples of hosting implementations
are browsers, editors and document repositories.</dd>

<dt><b><a id="dt-HTML" name='dt-HTML'>HTML</a></b></dt>

<dd>The HyperText Markup Language (<i>HTML</i>) is a simple markup
language used to create hypertext documents that are portable from
one platform to another. HTML documents are SGML documents with
generic semantics that are appropriate for representing information
from a wide range of applications. [<a class='noxref'
href='references.html#HTML40'>HTML4.0</a>]</dd>

<dt><b><a id="dt-inheritance"
name='dt-inheritance'>inheritance</a></b></dt>

<dd>In object-oriented programming, the ability to create new
classes (or interfaces) that contain all the methods and properties
of another class (or interface), plus additional methods and
properties. If class (or interface) D inherits from class (or
interface) B, then D is said to be <i>derived</i> from B. B is said
to be a <i>base</i> class (or interface) for D. Some programming
languages allow for multiple inheritance, that is, inheritance from
more than one class or interface.</dd>

<dt><b><a id="dt-interface"
name='dt-interface'>interface</a></b></dt>

<dd>An <i>interface</i> is a declaration of a set of <i>methods</i>
with no information given about their implementation. In object
systems that support interfaces and inheritance, interfaces can
usually inherit from one another.</dd>

<dt><b><a id="dt-lang-binding" name='dt-lang-binding'>language
binding</a></b></dt>

<dd>A programming <i>language binding</i> for an IDL specification
is an implementation of the interfaces in the specification for the
given language. For example, a Java language binding for the
Document Object Model IDL specification would implement the
concrete Java classes that provide the functionality exposed by the
interfaces.</dd>

<dt><b><a id="dt-localname" name='dt-localname'>local
name</a></b></dt>

<dd>A <i>local name</i> is the local part of a <i>qualified
name</i>. This is called the local part in Namespaces in XML [<a
class='noxref'
href='references.html#Namespaces'>Namespaces</a>].</dd>

<dt><b><a id="dt-method" name='dt-method'>method</a></b></dt>

<dd>A <i>method</i> is an operation or function that is associated
with an object and is allowed to manipulate the object's data.</dd>

<dt><b><a id="dt-model" name='dt-model'>model</a></b></dt>

<dd>A <i>model</i> is the actual data representation for the
information at hand. Examples are the structural model and the
style model representing the parse structure and the style
information associated with a document. The model might be a tree,
or a directed graph, or something else.</dd>

<dt><b><a id="dt-namespaceprefix"
name='dt-namespaceprefix'>namespace prefix</a></b></dt>

<dd>A <i>namespace prefix</i> is a string that associates an
element or attribute name with a <i>namespace URI</i> in XML. See
namespace prefix in Namespaces in XML [<a class='noxref'
href='references.html#Namespaces'>Namespaces</a>].</dd>

<dt><b><a id="dt-namespaceURI" name='dt-namespaceURI'>namespace
URI</a></b></dt>

<dd>A <i>namespace URI</i> is a URI that identifies an <i>XML
namespace</i>. Strictly speaking, this actually is a <i>namespace
URI reference</i>. This is called the namespace name in Namespaces
in XML [<a class='noxref'
href='references.html#Namespaces'>Namespaces</a>].</dd>

<dt><b><a id="dt-object-model" name='dt-object-model'>object
model</a></b></dt>

<dd>An <i>object model</i> is a collection of descriptions of
classes or interfaces, together with their member data, member
functions, and class-static operations.</dd>

<dt><b><a id="dt-parent" name='dt-parent'>parent</a></b></dt>

<dd>A <i>parent</i> is an immediate <i>ancestor</i> node of a
node.</dd>

<dt><b><a id="dt-qualifiedname" name='dt-qualifiedname'>qualified
name</a></b></dt>

<dd>A <i>qualified name</i> is the name of an element or attribute
defined as the concatenation of a <i>local name</i> (as defined in
this specification), optionally preceded by a <i>namespace
prefix</i> and colon character. See <a
href='http://www.w3.org/TR/1999/REC-xml-names-19990114/#ns-qualnames'>
<em>Qualified Names</em></a> in Namespaces in XML [<a
class='noxref'
href='references.html#Namespaces'>Namespaces</a>].</dd>

<dt><b><a id="dt-readonly-node" name='dt-readonly-node'>readonly
node</a></b></dt>

<dd>A <i>readonly node</i> is a node that is immutable. This means
its list of children, its content, and its attributes, when it is
an element, cannot be changed in any way. However, a readonly node
can possibly be moved, when it is not itself contained in a
readonly node.</dd>

<dt><b><a id="dt-root-node" name='dt-root-node'>root
node</a></b></dt>

<dd>The <i>root node</i> is the unique node that is not a
<i>child</i> of any other node. All other nodes are children or
other descendants of the root node.</dd>

<dt><b><a id="dt-sibling" name='dt-sibling'>sibling</a></b></dt>

<dd>Two nodes are <i>siblings</i> if and only if they have the same
<i>parent</i> node.</dd>

<dt><b><a id="dt-string-compare" name='dt-string-compare'>string
comparison</a></b></dt>

<dd>When string matching is required, it is to occur as though the
comparison was between 2 sequences of code points from the Unicode
3.0 standard [<a class='noxref'
href='references.html#Unicode'>Unicode</a>].</dd>

<dt><b><a id="dt-token" name='dt-token'>token</a></b></dt>

<dd>An information item such as an XML Name which has been <a
href='glossary.html#dt-tokenized'><em>tokenized</em></a>.</dd>

<dt><b><a id="dt-tokenized"
name='dt-tokenized'>tokenized</a></b></dt>

<dd>The description given to various information items (for
example, attribute values of various types, but not including the
StringType CDATA) after having been processed by the XML processor.
The process includes stripping leading and trailing white space,
and replacing multiple space characters by one. See the definition
of tokenized type.</dd>

<dt><b><a id="dt-well-formed" name='dt-well-formed'>well-formed
document</a></b></dt>

<dd>A document is <i>well-formed</i> if it is tag valid and
entities are limited to single elements (i.e., single sub-trees).
See <a
href='http://www.w3.org/TR/1998/REC-xml-19980210#sec-well-formed'><em>
Well-Formed XML Documents</em></a> in XML [<a class='noxref'
href='references.html#XML'>XML</a>].</dd>

<dt><b><a id="dt-XML" name='dt-XML'>XML</a></b></dt>

<dd>Extensible Markup Language (<i>XML</i>) is an extremely simple
dialect of SGML. The goal is to enable generic SGML to be served,
received, and processed on the Web in the way that is now possible
with HTML. XML [<a class='noxref'
href='references.html#XML'>XML</a>] has been designed for ease of
implementation and for interoperability with both SGML and
HTML.</dd>

<dt><b><a id="dt-XML-name" name='dt-XML-name'>XML name</a></b></dt>

<dd>See <a
href='http://www.w3.org/TR/1998/REC-xml-19980210#NT-Name'><em>XML
name</em></a> in the XML specification [<a class='noxref'
href='references.html#XML'>XML</a>].</dd>

<dt><b><a id="dt-XML-namespace" name='dt-XML-namespace'>XML
namespace</a></b></dt>

<dd>An <i>XML namespace</i> is a collection of names, identified by
a URI reference [<a class='noxref'
href='references.html#URIRef'>RFC2396</a>], which are used in XML
documents as element types and attribute names. [<a class='noxref'
href='references.html#Namespaces'>Namespaces</a>]</dd>
</dl>
</div>

<!-- div1 glossary -->
<div class='navbar' align='center'>
<hr title='Navigation area separator' />
<a accesskey='p' href='acknowledgements.html'>previous</a> &nbsp;
<a accesskey='n' href='references.html'>next</a> &nbsp; <a
accesskey='c' href='Overview.html#contents'>contents</a> &nbsp; <a
accesskey='i' href='def-index.html'>index</a></div>
</body>
</html>

