<?xml version="1.0"?>
<!--
Build file for org.apache.xml.resolver. No dependencies.
@author Norman.Walsh@Sun.COM
-->
<project name="xml-commons-resolver" default="all" >

  <!-- Name and version information -->
  <property name="name.resolver" value="xml-commons-resolver"/>
  <property name="impl.name" value="XmlResolver"/>
  <property name="impl.version" value="${version}"/>

  <!-- Allow properties following these statements to be overridden -->
  <!-- Note that all of these don't have to exist.  They've just been defined
       incase they are used. -->
  <property file="build.properties"/>
  <property file=".ant.properties"/>
  <property file="${user.home}/.ant.properties"/>
  <property file="default.properties"/>

  <!-- Location of where to put our build output -->
  <property name="tmp.dir" value="."/>

  <!-- Build directories -->
  <property name="build.dir" value="${tmp.dir}/build"/>
  <property name="build.classes.dir" value="${build.dir}/classes"/>
  <property name="docs.dir" value="${build.dir}"/>
  <property name="docs.user.dir" value="${docs.dir}/docs"/>
  <property name="docs.java.dir" value="${docs.user.dir}/javadocs"/>
  <property name="docs.printer.dir" value="${docs.user.dir}/printer"/>

  <!-- Source constants and directories -->
  <property name="src.dir" value="src" />
  <property name="resolver.subdir" value="org/apache/xml/resolver" />
  <property name="resolver.jar.location" value="${build.dir}" />
  <property name="resolver.jar.name" value="resolver.jar" />
  <property name="resolver.jar" value="${resolver.jar.location}/${resolver.jar.name}" />

  <!-- Test results directory -->
  <property name="check.dir" value="${tmp.dir}/${project.name}/check"/>

  <!-- Build properties -->
  <property name="build.debug" value="on"/>
  <property name="build.deprecation" value="on"/>
  <property name="build.optimize" value="off"/>

  <!-- Document constants -->
  <property name="company.name" value="Apache"/>

  <property name="copyright.date" value="2001"/>
  <property name="copyright.message"
            value="Copyright &#169; ${copyright.date} ${company.name}. All Rights Reserved."/>

  <!-- Public Targets -->
  <target name="main"
          depends="all, check"
          description="Alias for all, check."/>

  <target name="all"
          depends="jar,docs,javadocs"
          description="This is the default target.  Compiles the program.">
  </target>

  <target name="compile" depends="init"
    description="Compile all classes">
   <javac srcdir="${src.dir}" destdir="${build.classes.dir}">
     <include name="${resolver.subdir}/*.java"/>
     <include name="${resolver.subdir}/helpers/*.java"/>
     <include name="${resolver.subdir}/readers/*.java"/>
     <include name="${resolver.subdir}/tools/*.java"/>
     <include name="${resolver.subdir}/apps/*.java"/>
   </javac>
  </target>

  <target name="jar" depends="compile"
    description="Jar all classes">
    <echo message="Jarring ${resolver.jar} from ${build.classes.dir}" />
    <copy todir="${build.classes.dir}">
      <fileset dir="${src.dir}" includes="**/*.properties"/>
    </copy>

    <jar jarfile="${resolver.jar}" manifest="${build.dir}/manifest.resolver" basedir="${build.classes.dir}" />
  </target>

  <target name="install">
    <echo message="${name.resolver} currently doesn&apos;t support install."/>
  </target>

  <target name="uninstall">
    <echo message="${name.resolver} currently doesn&apos;t support uninstall."/>
  </target>

  <target name="clean"
          description="Deletes all files that are generated by the build.">
    <delete dir="${build.dir}"/>
  </target>

  <target name="distclean"
          depends="clean"
          description="Deletes all files that a left from clean and returns the project to its distributed state.">
  </target>

  <target name="docs"
          depends="javadocs, printerdocs"
          description="Generates all documentation for a project.">
  </target>

  <target name="javadocs"
          depends="init"
          description="Generates the JavaDocs for the project.">

    <mkdir dir="${docs.java.dir}"/>
	  <javadoc sourcepath="${src.dir}"
		   destdir="${docs.java.dir}"
                   Overview="${src.dir}/org/apache/xml/resolver/overview.html"
                   author="true"
                   version="true"
                   use="true"
		   windowtitle="${name.resolver} API"
		   doctitle="${name.resolver}"
		   bottom="${copyright.message}">
            <package name="org.apache.xml.resolver"/>
            <package name="org.apache.xml.resolver.helpers"/>
            <package name="org.apache.xml.resolver.readers"/>
            <package name="org.apache.xml.resolver.tools"/>
            <package name="org.apache.xml.resolver.apps"/>
	  </javadoc>
  </target>

  <target name="printerdocs"
          depends="init"
          description="Generates a printer friendly version of the documentation.">
    <echo message="${name.resolver} currently doesn&apos;t have any user documents in a printable format."/>
  </target>

  <target name="dist"
          depends="all, docs"
          description="Generates all the artifacts used for a distribution.">
    <echo message="${name.resolver} currently doesn&apos;t support &apos;dist&apos;."/>
  </target>

  <target name="test"
          depends="check"
          description="Alias for check">
  </target>

  <target name="check"
          depends="jar"
          description="Compile and execute any tests.">
    <echo message="BEGIN Simple test: just call Resolver (manual verification required)."/>
    <java classname="org.apache.xml.resolver.Catalog">
      <classpath>
        <pathelement location="${resolver.jar}"/>
        <pathelement path="${java.class.path}"/>
      </classpath>
    </java>
    <echo message="END Simple test: just call Resolver (manual verification required)."/>
  </target>

  <!-- Internal Targets -->
  <target name="init">
    <echo message="Building ${name.resolver} (version: ${version}) Buildfile: $Revision: 1.1 $"/>
    <mkdir dir="${build.classes.dir}" />
    <mkdir dir="${docs.user.dir}" />
    <mkdir dir="${docs.java.dir}" />
    <filter token="impl.version" value="${impl.version}"/>
    <filter token="impl.name" value="${impl.name}"/>
    <copy todir="${build.dir}" file="${src.dir}/manifest.resolver" filtering="true"/>
  </target>

  <!-- Project specific Targets -->

</project>
